
Backdoor Detection

- Backdoors are files, scripts, programs, or codes that run automatically to allow an attacker to gain access to a machine multiple times. This helps the attacker get a quick way back into the machine.
- These backdoors can be extremely dangerous as they can allow further exploitation into a machine or server after the initial attack.

SSH_KEYS

- Typically, attackers who have gained access to a system will leave their SSH keys on the system for further use.
  - This is to quickly gain access to a shell through SSH.
  
- These keys are stored in ~/.ssh
  - (This may not always be the folder location, check around the machine for any SSH keys.)
  
- Any key in this file that does not have the end parameter or end name of your own machine could be a backdoor.
  - For CCDC, check to make sure whether or not this is one of the flag generators that the host of the competition needs to give you points.
    - If not, then REMOVE THE KEY. (There is no way to automate this, it must be done manually.)

- Regularly check these folders to see if any SSH keys or backdoors were installed. This can help prevent further exploits if the red team has access to your system.

.BASH SESSIONS

- .bashrc is a startup scrip used by the Bourne shell, in other words, a bash shell.
  - Many attackers use reverse shells to gain access to these bash environments.
  - Note: Attackers will generally use netcat for these reverse shells

- The skeleton file of .bashrc can be found at /etc/skel

CRONJOBS

- As explaining in the Cron text file, cronjobs are scheduled jobs located within the /var/spool/cron/crontabs.

- # crontab -l
  - This command will output any cronjobs on the user's account.
  - This command can be used on regular user's accounts, however the crontabs folder should only be accessible to root users.
  
- Attackers have the ability to place a backdoor into these jobs, due to the fact that they execute their files at a specific time.
- Examining these files for any backdoor commands(such as netcat), can help identify a malicious cronjob from a regular one.

- # crontab -r (user's cronjob)


